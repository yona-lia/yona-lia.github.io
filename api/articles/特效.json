{"title":"特效","uid":"955960c779c84af54e7260f9dff4ec7a","slug":"特效","date":"2025-08-20T10:18:00.000Z","updated":"2025-08-20T11:26:40.875Z","comments":true,"path":"api/articles/特效.json","keywords":null,"cover":[],"content":"<h1 id=\"特效案例\">特效（案例）</h1>\r\n<h2 id=\"火\">火</h2>\r\n<p>火的主体（更换uv，查看子uv大小，调整火焰颜色（渐变），调整加速度，增加卷曲噪波）</p>\r\n<p>不完全燃烧的烟雾（更新uv，调整不透明度和颜色，增加卷曲噪波）</p>\r\n<p>火星子（颜色，大小，速度，卷曲噪波）</p>\r\n<p>燃烧的空气扭曲</p>\r\n<h2 id=\"爆炸\">爆炸</h2>\r\n<p>爆炸火焰主体</p>\r\n<p>爆炸火焰丰富</p>\r\n<p>爆炸烟雾</p>\r\n<p>爆炸碎石（与地面碰撞）（粒子更新：collision（碰撞））</p>\r\n<p>爆炸碎石火焰跟随（发射器绑定方法、事件处理器方法）</p>\r\n<p>爆炸火星1（不与地面碰撞，空中就消散）（不透明度，加速度，颜色变化，光线变化）</p>\r\n<p>爆炸火星2（掉地上冷却的火星，增加地面碰撞）（不透明度，加速度，颜色变化，光线变化）</p>\r\n<h2 id=\"刀光\">刀光</h2>\r\n<p><strong>发射器更新：</strong></p>\r\n<p>Emitter State : self once fixed</p>\r\n<p>Spawn Per Frame</p>\r\n<p><strong>粒子更新：</strong></p>\r\n<p>可以更改刀光颜色</p>\r\n<p><strong>渲染：</strong></p>\r\n<p>条带渲染器，把条带渲染器的默认材质改为后续制作的材质。</p>\r\n<p>制作需要的材质：</p>\r\n<p>加入贴图1，Panner模块让uv动起来，加入颜色，和贴图相乘来改变贴图初始颜色。</p>\r\n<p>加入贴图2，加入颜色，和贴图相乘来改变贴图初始颜色。</p>\r\n<p>贴图1和贴图2相加得到叠加的贴图6。</p>\r\n<p>加入贴图3，Panner模块让uv动起来，引入噪波TexCoord模块，把贴图3的红色通道乘0.1后和噪波相加得到叠加后的贴图4。</p>\r\n<p>把贴图4和贴图2的UVs节点相连让其出现一些效果。</p>\r\n<p>加入贴图5，把贴图4连接到贴图5的UVs节点，然后产生一些效果。</p>\r\n<p>加入Particle Color模块，通道rgb和贴图6相乘得到最终的自发光颜色。</p>\r\n<p>贴图5的通道rgb和Particle Color模块的通道a相乘得到最终的不透明度。</p>\r\n<p>加入Dynamic\r\nParameter模块，让某些参数可以在粒子系统中控制。把贴图5的R通道和他的第一个节点线性插值后得到最后的折射。这样就可以在粒子系统中控制折射。</p>\r\n<p>把Dynamic\r\nParameter模块第二个节点和贴图1改变颜色后的结果相乘后再和改变颜色后的贴图2相加，这样就可以在粒子系统中控制颜色。</p>\r\n<p><strong>绑定到角色身上：</strong></p>\r\n<p>打开要绑定的角色动画，绑定到需要的位置。绑定对应的粒子系统和对应的插槽。在时间轴合适的位置加入定时粒子系统。</p>\r\n<p>打开角色蓝图，删去不必要的模块，然后对于此角色再次导入第三人称模版，在项目设置的输入中把轴映射改为此角色的对应名称。</p>\r\n<p>最后在关卡中的游戏模式改变游戏模式重载，默认pawn类改为对应角色。</p>\r\n<p>开始游戏，就可以查看效果了。</p>\r\n<h2 id=\"附体闪电\">附体闪电</h2>\r\n<p>新建粒子系统，在发射器更新新建暂存区模块。</p>\r\n<p><strong>暂存区逻辑：</strong></p>\r\n<p>然后进入模块内部，输入添加一个骨骼网格体的输入，输出则是开始位置和结束位置。命名空间需要设置为发射器。我们要在骨骼网格体上随机取点来形成闪电生成的位置。</p>\r\n<p>从骨骼网格体脱出get skin triangle\r\ndata函数。使用这个函数获取骨骼网格体表面的数据。输出的position就是我们想要的直接连接到输出的开始位置节点。</p>\r\n<p>再从骨骼网格体脱出random pray for\r\nword函数，来随机选择三角面位置。coord连接到get\r\nskin函数的coord节点。我们还需要一个输入作为随机种子。在输入模块增加一个int32类型，然后直接镰刀random函数的randominfo节点，系统会自动转换。这样我们就完成了在网格体表面随机取点的逻辑。</p>\r\n<p>结束点和开始点一样，直接复制开始点逻辑就好。</p>\r\n<p>对于采样的normal信息，我们也可以输出，用来确定电流放射的角度。同样的拥有开始点和结束点，命名空间也都是发射器阶段。</p>\r\n<p><strong>粒子系统设置：</strong></p>\r\n<p>回到系统总览，对我们输入的两个值进行设置。分别是random和骨骼网格体。注意的是，骨骼网格体需要开启CPU访问。</p>\r\n<p>设置好后，我们用我们设置的四个值来配置光束。</p>\r\n<p>添加bean emitter\r\nsetup模块。看见beanstart和beanend，直接将设置的开始位置和结束位置的参数复制过去就好。absolute\r\nbean end要勾选，保证我们设置的值是我们设置的值。下面的use bean\r\ntangents（使用切线）勾选，然后使用我们设置的normal的两个值。</p>\r\n<p>然后发射器更新添加爆发式发射并调整参数。在粒子生成部分添加spawn\r\nbean模块来生成光束，并改为条带渲染器，并把条带渲染器张力调到最大，这样曲线会形成弯折。然后在粒子更新添加bean\r\nwidth来控制光束的宽度。</p>\r\n<p>然后更改闪电的颜色并把特效导入动画序列。</p>\r\n<p><strong>闪电材质制作：</strong></p>\r\n<p>接下来创建闪电材质。将材质改为additive，无光照，双面。拖入闪电材质。添加panner节点让贴图动起来。闪电频率有些高，添加texture\r\ncoordinate节点。u平铺缩放改为0.5。</p>\r\n<p>然后使用噪波干扰的方式给闪电添加闪烁效果。导入一个噪波，添加一个panner节点，再panner节点之前再加入一个texture\r\ncoordinate节点，把uv缩放改为0.2，在噪波之后加入一个指数节点，增加噪波的对比度。</p>\r\n<p>然后把噪波和闪电相乘，这样就得到了闪电闪烁的效果。</p>\r\n<p>接下来预留粒子系统的颜色输入。添加particle\r\ncolor节点。把闪电贴图和color节点的透明度相乘最后连到透明度，将闪电和噪波相乘的结果和color节点的rgb节点相乘，连接到最后的自发光颜色。</p>\r\n<p>这样闪电贴图就准备好了。</p>\r\n<p><strong>粒子系统二次调整：</strong></p>\r\n<p>将条带渲染器的材质改为闪电材质，然后调整条带的宽度。</p>\r\n<p><strong>网格体：</strong></p>\r\n<p>注意在骨骼模型中开启所有的lod的CPU访问，否则特效无法显示。</p>\r\n<p><strong>扩展：</strong></p>\r\n<p>首先将颜色属性提升为用户变量。修改变量名，不要和系统命名冲突，这样外部就有权限来修改这个值了。默认的粒子系统不能传参，我们需要自定义蓝图。</p>\r\n<p>新建蓝图，搜索notify，找到定时niagara效果这个类。我们需要继承这个类来进行自定义。进入蓝图，选择重写notify\r\nbegin方法。这和方法会在Niagara效果开始时执行。</p>\r\n<p>从mesh comp引脚脱出执行get spawnned\r\neffect方法，可以获取当前触发的效果。返回值我们可以强转成Niagara\r\ncomponent。因为我们明确知道我们会设置Niagara效果。强转失败可以输出提示，强转成功我们可以给系统设置参数。我们需要设置颜色，选择set\r\nniagara variable(linearcolor)。variable\r\nname设置前面改为参数的颜色变量，in\r\nvalue改为变量。修改一下名称，然后把变量后面的小眼睛打开，表示把变量暴露出去。编译保存。</p>\r\n<p>回到动画序列，删除原有的定时粒子系统，添加我们自定义蓝图，配置粒子系统和插槽。上面多了一个配置，就是我们刚刚的暴露出来的变量。修改就可以调整闪电的颜色。</p>\r\n<h2 id=\"法阵\">法阵</h2>\r\n<p>首先自制法阵纹理图案，然后导入系统，设计材质让粒子系统可以控制颜色和透明度。</p>\r\n<p><strong>粒子更新</strong>里面加入<strong>sprite Rotation\r\nRate</strong>模块来生成旋转效果。</p>\r\n<h3 id=\"上下浮动的物体\">上下浮动的物体</h3>\r\n<p>自制小方块，导入引擎。自己制作材质，其中材质系统中的<strong>fresnel</strong>模块可以让物体变得半透明。</p>\r\n<p>然后再<strong>粒子更新</strong>中加入<strong>Update Mesh\r\nOrientation</strong>模块让物体旋转起来，然后加入<strong>shape\r\nLocation</strong>让物体上下浮动。</p>\r\n<p><img src=\"../images/半透明.png\" /></p>\r\n<h3 id=\"环绕的物体\">环绕的物体</h3>\r\n<p>导入物体，调整位置，使用环形。</p>\r\n<p>这里重点是<strong>发射器的生命周期和粒子的生命周期</strong>。</p>\r\n<p>当发射器生命周期结束后，粒子会持续到自己的生命周期结束。</p>\r\n<p>这样就会因为两者不同步而产生重复渲染。从而实现多个物体环绕的效果。</p>\r\n<p>通过调整发射器生命周期和粒子生命周期来控制环绕物体的数量。</p>\r\n<h3 id=\"mask遮罩\">Mask(遮罩)</h3>\r\n<p>使用<strong>radialGradientExponential</strong>模块，在贴图制作中添加遮罩。其中<strong>radius参数控制大小</strong>，<strong>density参数控制边缘软硬</strong>。</p>\r\n<p><img src=\"../images/mask.png\" /></p>\r\n<h3 id=\"子发射器\">子发射器</h3>\r\n<p>可以做一个子发射器，然后在主效果中把渲染改为组件渲染，调用你的子发射器。</p>\r\n<h3 id=\"事件处理器\">事件处理器</h3>\r\n<p>可以让一个效果跟随另一个效果发生。父效果需要开启固定id。并且在粒子更新中添加<strong>generate\r\nlocation\r\nevent</strong>模块。然后在需要的加入事件处理器并指定父模块。</p>\r\n<p><img src=\"../images/事件处理器.png\" /></p>\r\n<h3 id=\"材质函数\">材质函数</h3>\r\n<p>如果在制作材质时，有一些很常用的操作，可以将这些操作封装为材质函数，在制作时可以直接调用。</p>\r\n<p><img src=\"../images/材质函数.png\" /></p>\r\n<p><img src=\"../images/材质函数调用.png\" /></p>\r\n<h3 id=\"炫彩光效\">炫彩光效</h3>\r\n<p>这里主要是材质的制作。</p>\r\n<p>用到了<strong>vectortoradiavalue</strong>模块，将纹理极坐标化。</p>\r\n<p>加入法线贴图，让光效有空气扭曲的效果。</p>\r\n<p>光效和地板之间相切，可以在输出透明度时加入<strong>depth\r\nfade</strong>模块增加深度检测。</p>\r\n<p><strong>lerp</strong>模块是用来调整法线贴图的。</p>\r\n<p><img src=\"../images/极坐标.png\" /></p>\r\n<h3 id=\"深度背面剔除\">深度背面剔除</h3>\r\n<p><img src=\"../images/深度1.png\" /></p>\r\n<p><img src=\"../images/深度2.png\" /></p>\r\n<p>记得要在材质中开启<strong>允许自定义深度写入</strong></p>\r\n<h3 id=\"描边效果\">描边效果</h3>\r\n<p>做两个材质，在网格体的<strong>渲染</strong>部分，<strong>重载材质</strong>中加入<strong>覆盖材质</strong>就可以实现。</p>\r\n<p><img src=\"../images/描边1.png\" /></p>\r\n<p>如果在<strong>特效</strong>中想加入描边效果，可以把要加入效果的物体用子发射器发射。在渲染模块添加两个网格体渲染器，分别加入材质。</p>\r\n<p><img src=\"../images/描边.png\" /></p>\r\n<h3 id=\"光照\">光照</h3>\r\n<p>有两种，一种适用于场景特效，另一种适用于技能特效。</p>\r\n<p>第一个，在渲染中添加点光源组件。里面有很详细的灯光调节，和灯光师的一样。这种适用于场景特效。这个里面可以产生阴影</p>\r\n<p><img src=\"../images/光照1.png\" /></p>\r\n<p>第二个，在渲染中添加光纤渲染器。这个里面不能产生阴影。</p>\r\n","feature":true,"text":"特效（案例） 火 火的主体（更换uv，查看子uv大小，调整火焰颜色（渐变），调整加速度，增加卷曲噪波） 不完全燃烧的烟雾（更新uv，调整不透明度和颜色，增加卷曲...","permalink":"/post/特效","photos":[],"count_time":{"symbolsCount":"3.9k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"特效学习","slug":"特效学习","count":1,"path":"api/tags/特效学习.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%89%B9%E6%95%88%E6%A1%88%E4%BE%8B\"><span class=\"toc-text\">特效（案例）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%81%AB\"><span class=\"toc-text\">火</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%88%86%E7%82%B8\"><span class=\"toc-text\">爆炸</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%80%E5%85%89\"><span class=\"toc-text\">刀光</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%99%84%E4%BD%93%E9%97%AA%E7%94%B5\"><span class=\"toc-text\">附体闪电</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B3%95%E9%98%B5\"><span class=\"toc-text\">法阵</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%8A%E4%B8%8B%E6%B5%AE%E5%8A%A8%E7%9A%84%E7%89%A9%E4%BD%93\"><span class=\"toc-text\">上下浮动的物体</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%8E%AF%E7%BB%95%E7%9A%84%E7%89%A9%E4%BD%93\"><span class=\"toc-text\">环绕的物体</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#mask%E9%81%AE%E7%BD%A9\"><span class=\"toc-text\">Mask(遮罩)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AD%90%E5%8F%91%E5%B0%84%E5%99%A8\"><span class=\"toc-text\">子发射器</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BA%8B%E4%BB%B6%E5%A4%84%E7%90%86%E5%99%A8\"><span class=\"toc-text\">事件处理器</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9D%90%E8%B4%A8%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">材质函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%82%AB%E5%BD%A9%E5%85%89%E6%95%88\"><span class=\"toc-text\">炫彩光效</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B7%B1%E5%BA%A6%E8%83%8C%E9%9D%A2%E5%89%94%E9%99%A4\"><span class=\"toc-text\">深度背面剔除</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8F%8F%E8%BE%B9%E6%95%88%E6%9E%9C\"><span class=\"toc-text\">描边效果</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%85%89%E7%85%A7\"><span class=\"toc-text\">光照</span></a></li></ol></li></ol></li></ol>","author":{"name":"yona-lia","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/143192323?v=4","link":"/","description":"May this journey end in the stars","socials":{"github":"https://github.com/yona-lia","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{},"next_post":{"title":"考点复习","uid":"cf3e005cfd96f68780fbdebaaab6e37f","slug":"考点复习","date":"2025-06-10T16:13:46.000Z","updated":"2025-06-10T17:00:05.699Z","comments":true,"path":"api/articles/考点复习.json","keywords":null,"cover":[],"text":"考点复习一二图形和图像的区别（选择）图形：矢量图，以几何数学为基础，由点、线、圆等图元组成，仅记录点的坐标数据及绘图命令 图像：点阵图，用像素来描述的图，记录每...","permalink":"/post/考点复习","photos":[],"count_time":{"symbolsCount":"38k","symbolsTime":"34 mins."},"categories":[],"tags":[{"name":"数字图像处理","slug":"数字图像处理","count":1,"path":"api/tags/数字图像处理.json"}],"author":{"name":"yona-lia","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/143192323?v=4","link":"/","description":"May this journey end in the stars","socials":{"github":"https://github.com/yona-lia","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}